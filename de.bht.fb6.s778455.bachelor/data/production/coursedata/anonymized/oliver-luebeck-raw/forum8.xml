<forum>
 <thread title="Zur Info: java.io.Console">
    <post id="1" author="Student1" time="Dienstag, 20. September 2007, 14:45"><![CDATA[
Hallo

Zu Eurer Information, unter Eclipse funktioniert die Anweisung "java.io.Console" nicht.
Hier ein Link: https://bugs.eclipse.org/bugs/show_bug.cgi?id=122429

Wenn man
java.io.Console konsole = System.console();

durch diese Zeile ersetzt:

java.io.BufferedReader konsole = new BufferedReader(new InputStreamReader(System.in));

funktioniert das Programm auch unter Eclipse wie erwartet.

Grüsse
    ]]></post>
    </thread>
    
     <thread title="DUD - LE02">
    <post id="2" author="Student2" time="Sonntag, 2. Oktober 2007, 13:04"><![CDATA[ 
Eine Frage zum Herangehen an die Klasse Writer:

Kapitel 4.1 Quellcodebeispiel Zeile 044 - 046

werden FileOutputStream und OutputStreamWriter benutzt.

in Kapitel 4.3 hingegen wird der BufferedWriter einfach um FileWriter gelegt.
(Zeile 049)

Worin liegt der Unterschied, beide schreiben in ein File?

Grüsse, 
    ]]></post>
    <post id="3" reply="2" author="Mentor2" time="Sonntag, 2. Oktober 2007, 22:29"><![CDATA[
Hallo Herr Rose,

In der offiziellen Dokumentation ist dazu folgendes zu finden: "FileOutputStream is meant for writing streams of raw bytes such as image data. For writing streams of characters, consider using FileWriter."

Da nun aber ein OutputStreamWriter um den FileOutputStream gepackt wird, ist das Resultat sehr ähnlich. In beiden Fällen wird die Standardkodierung für Zeichen des Systems genommen, um die zu schreibenden Zeichen zu speichern. Bei der Variante mit dem OutputStreamWriter könnte jedoch von dieser Standardzeichenkodierung abgewichen werden. Der Weg mit dem FileWriter ist hier also lediglich der "bequemere" (Die Klasse FileWriter wird offiziell als Komfortklasse zum Schreiben von zeichenbasierten Dateien beschrieben).

Freundliche Grüße
    ]]></post>
    <post id="4" reply="3" author="Mentor2" time="Montag, 3. Oktober 2007, 08:35"><![CDATA[ 
Aha, vielen Dank, kam diesmal gar nicht auf die Idee, in die Doku zu schauen.

Grüsse, 
     ]]></post>
    <post id="5" reply="3" author="Student3" time="Mittwoch, 5. Oktober 2007, 00:09"><![CDATA[ 
Die Formulierung "...ein OutputStreamWriter um den FileOutputStream gepackt wird", oder wie es sogar im Text der Lerneinheit heisst "...wird um den OutputStreamWriter noch ein BufferedWriter gelegt..." macht mich stutzig.

So wie ich es verstanden habe, werden Anschluss- und Verkettungsströme miteinander verkettet und nichts 'drumherumgelegt'.

Noch was anderes: Im Code von Kapitel 4.3

058 // Puffer (Zwischenspeicher) leeren 
059 bWriter.flush(); 
060 // Ausgabestrom wird geschlossen 
061 bWriter.close();

wird erst der Puffer geleert und dann der Strom geschlossen.
So wird es auch im Text darunter erläutert.
In der Doku heisst es aber zur Methode close() in Klasse Writer

close() Closes the stream, flushing it first. 

Demnach wäre hier dann die Methode

flush()

überflüssig, oder irre ich?
     ]]></post>
    <post id="6" reply="5" author="Student4" time="Mittwoch, 5. Oktober 2007, 03:18"><![CDATA[ 
There is no need to explicitly call flush before calling close.

Hier: http://www.javapractices.com/topic/TopicAction.do?

MfG 
     ]]></post>
    <post id="7" reply="5" author="Mentor2" time="Donnerstag, 6. Oktober 2007, 13:11"><![CDATA[  
Die Formulierungen basieren wohl auf den unterschiedlich Ansichten. Ein OutputStreamWriter erhält die Referenz auf einen FileOutputStream und verwaltet diesen. In diesem Sinne ist die Referenz des einen Objekts "in" einem anderen Objekt.
Beim Programmablauf sind die Aufrufe jedoch aneinandergereit oder halt "verkettet". Der OutputStreamWriter nutzt den FileOutputStream zum Schreiben.

Bezüglich close und flush ist in diesem kleinen Beispiel ein flush nicht unbedingt notwendig. Es ist jedoch nicht immer der Fall, dass man nach einem flush den Stream schließen möchte. Von daher ist es gut zu wissen, dass man den Zwischenspeicher auch ohne Schließen des Streams leeren kann.

Zu Eurer Information, unter Eclipse funktioniert die Anweisung "java.io.Console" nicht.
Hier ein Link: https://bugs.eclipse.org/bugs/show_bug.cgi?id=122429

Wenn man
java.io.Console konsole = System.console();

durch diese Zeile ersetzt:

java.io.BufferedReader konsole = new BufferedReader(new InputStreamReader(System.in));

funktioniert das Programm auch unter Eclipse wie erwartet.

Grüsse

    ]]></post>
    </thread>
    
     <thread title="Lösung Nachklausur">
    <post id="8" author="Student1" time="Montag, 3. Oktober 2007, 18:55"><![CDATA[
SgF ,

ich bin erst heute dazu gekommen, mir die Aufzeichnung der OM anzuschauen. Die Nachklausur (welche Sie uns per Mail geschickt haben) wurde gar nicht besprochen.

Bekommen wir davon noch die Musterlösung?

Mit freundlichen Grüssen

     ]]></post>
    <post id="9" reply="8" author="Mentor2" time="Donnerstag, 6. Oktober 2007, 12:59"><![CDATA[ 
Hallo,

nach Rücksprache mit Frau Merceron habe ich nun die nötigen Informationen, um Fragen zur Nachklausur beantworten zu können. Bitte teilen Sie mir mit, wo Klärungsbedarf besteht.

Freundliche Grüße
     ]]></post>
    <post id="10" reply="9" author="Student1" time="Mittwoch, 12. Oktober 2007, 14:56"><![CDATA[ 
Sehr geehrter ,

ich habe mich an der einen und anderen Aufgabe probiert, manche Aufgaben habe ich gar nicht verstanden!
ich wollte einfach sehen, ob meine Lösungen stimmen bzw anhand der Lösungen von den Aufgaben, die ich gar nicht verstanden habe, die Aufgabe erst mal verstehen.

Ich kann meine Lösungen ja mal posten.

MfG
     ]]></post>
    <post id="11" reply="10" author="Mentor1" time="Mittwoch, 12. Oktober 2007, 16:04" attachment="NachKlausurVFHSep2011SolAM.pdf"><![CDATA[ 
Liebe , liebe Studierende

anbei ist eine Lösung. Bitte teilen Sie mir mit, alle Stellen, die nicht verständlich sind.
Mit freundlichen Grüßen
    ]]></post>
  </thread>
      
  <thread title="Fehler im Skript LE03 getStatusDirekt()">
    <post id="12" author="Student2" time="Montag, 17. Oktober 2007, 09:45" ><![CDATA[
Liebe Studierende,

Danke für den fogenden Fehlerhinweis. Die Methode in der Interface
FigurInterface ist:
void printStatusDirekt().
Alle Klassen, die diese Interface implementieren, sollen eine Methode
mit genau diesem Kopf haben.
Im Skript ist zum Teil noch die alte Methode vorhanden:
void getStatusDirekt()
siehe Seite 15.

Die alte Methode ist nicht glücklich. Es hat sich eingebürgert, dass
eine Methode, dessen Namen mit get anfängt, eine Rückgabe hat,
also kein void.

Die Schnittstelle FigurInterfaceErw ist alt und noch nicht korrigiert.
Die Methode
 void getFlaecheDirekt();
sollte lieber heißen:
 void printFlaeche();
Außerdem sollte diese Schnittstelle javadoc Kommentare statt
Implementierungskommentare haben. Ich melde diesen Fehler.

Mit freundlichen Grüßen
    ]]></post>
  </thread>
      
  <thread title="Dateien kopieren">
    <post id="13" author="Student1" time="Samstag, 15. Oktober 2007, 18:52" ><![CDATA[
Guten Tag,

ich tue mich irgendwie mit den Pfaden schwer, es klappt einfach nicht.
Meine Datei AbbwurfParabel.jpg wird nicht in das Zielverzeichnis kopiert

(DateiKopieren.java, LE02 Dateien)

Kann mir jemand sagen, was nicht stimmt? (schicke Screenshot als Anhang)?
     ]]></post>
    <post id="14" reply="13" author="Student5" time="Sonntag, 16. Oktober 2007, 16:47"><![CDATA[
Bevor die Dateien kopiert werden wird überprüft, ob denn dem Programm 2 Argumente übergeben wurden.
Ich nehme mal an, dass das nicht geschehen ist und sich das Programm deswegen vorher beendet :-)
     ]]></post>
    <post id="15" reply="14" author="Student1" time="Montag, 17. Oktober 2007, 14:37"><![CDATA[ 
Hallo,

verstehe, das wird es wohl sein. Aber warum werden denn keine 2 Parameter übergeben?
Die Anweisung

 kopiereDatei(args[0], args[1]);

habe ich eben mit den vollständigen Pfadangaben ersetzt. Müsste doch auch klappen?

LG 
     ]]></post>
    <post id="16" reply="15" author="Student5" time="Montag, 17. Oktober 2007, 19:48"><![CDATA[ 
Die main Methode wird ja beim Starten des Programms ausgeführt.
Wie du sehen kannst hat diese Methode einen Parameter String[] args.

Wenn du nun dein Programm startest und hinter den Dateinamen in der Kommandozeile noch mehr schreibst, wird alles was folgt in den String Array args gepackt. Auf die Parameter von der Kommandozeile kannst du nun in deinem Programm (in der main Methode) über das Array args zugreifen.

Das Programm wie du es verwenden möchtest überprüft nun, ob 2 Parameter übergeben wurden. Du kannst entweder beim Programmstart 2 Parameter übergeben:

java DeinProgramm Parameter1 Parameter2

oder du löscht einfach die Abfrage if(args.length != 2)...

Gruß,
    ]]></post>

      </thread>
      
  <thread title="Einsendeaufgabe LE05 (paint zeichnet nicht)">
    <post id="17" author="Student2" time="Freitag, 28. Oktober 2007, 18:45" ><![CDATA[
import java.awt.Color;
import java.awt.Graphics;
import java.io.IOException;
import javax.swing.JFrame;



public class HistoFarbig extends JFrame
{
public static void main(String[] args) throws IOException
{
new HistoFarbig();
}

public HistoFarbig()
{
JFrame jWindow=new JFrame();
jWindow.setTitle("Farbiges Histogramm");
jWindow.setSize(500, 500);
jWindow.setBackground(Color.white);
jWindow.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
jWindow.setVisible(true);
}

public void paint(Graphics g)
{
super.paint(g);
g.setColor(Color.black);
g.drawLine(10,10,10,100);
}
}

Lieber , liebe Studierende,

Danke schön Herr Waidner, dass Sie diesen Typischen Fehler zeigen. Ihre Klasse ist eine Unterklasse von JFrame, HistoFarbig extends JFrame. Also paint überschreibt die paint Methode der oberen Klasse und wird mit this aufgerufen. Als Wiederspruch dazu erzeugen Sie im Konstrultor ein JFrame-Objekt. Die Methode paint wird NICHT mit dem Objekt jWindow aufgerufen.
Sich gut merken: wenn eine Klasse als Unterklasse der Klasse JFrame deklariert wird, KEIN JFrame-Objekt im Konstruktor erzeugen (ausser es gibt einen SEHR guten Grund dafür). Siehe auch die Klasse VielEckAnwendung direkt in Moodle LE05, nicht im Lernmaterial.
Mit freundlichen Grüßen
     ]]></post>
    <post id="18" reply="17" author="Student6" time="Freitag, 28. Oktober 2007, 22:50"><![CDATA[  
ahh, vielen Dank Frau Merceron. klappt nun :-) schönes Wochenende!
    ]]></post>
      </thread>
      
  <thread title="EA LE05">
    <post id="19" author="Student7" time="Sonntag, 30. Oktober 2007, 23:31" ><![CDATA[
Hallo ,

ich habe einen Totalausfall, was diese Aufgabe angeht. Ich habe eine Klasse geschrieben, die mir bis jetzt ein wunderschönes, farbiges Histogramm anzeigt (mit vorgegeben Werten einfach sieben Rechtecke zeichnen lassen). Allerdings weiß ich nicht, wie ich Messwerte damit verknüpfen soll bzw wie ich die Messwerte in Rechtecke umwandele. Bin schon am Hin- und Herprobieren und komme nicht weiter. Vielleicht hat ja jemand eine Idee für mich... Bin für jede Anregung dankbar.

Schöne Grüße
     ]]></post>
    <post id="20" reply="19" author="Student8" time="Montag, 31. Oktober 2007, 00:58"><![CDATA[  
Wenn du schon Rechtecke zeichnetst dann einfach anstatt feste Werte für die Höhe den Messwert nehmen oder besser noch eine skalierte Höhe anhand des maximalen Messwertes berechnen. Mit Messwerte sind letzendlich nur vorgegebene Höhen gemeint.

draw()
....
foreach werte
double scale = 1;
int h = (int)(werte[nWert] * scale);
g.fillRect(x, 400-rand-h, 15, h);
     ]]></post>
    <post id="21" reply="20" author="Student7" time="Montag, 31. Oktober 2007, 01:38"><![CDATA[  
Vielen dank für die Antwort! werde mir Deinen Code allerdings erst morgen (oder nachher zwinkernd ) genauer anschauen. Ich bin jetzt zu müde - es geht nichts mehr.

Schöne Grüße
    ]]></post>
  </thread>
      
    <thread title="LE05 Drehrichtung">
    <post id="22" author="Student7" time="Sonntag, 30. Oktober 2007, 14:37" ><![CDATA[
Hallo zusammen,

ich arbeite mich gerade durch die LE05 und bin leicht werwirrt. Es wird die Aussage gemacht, dass Winkel in positiver Drehrichtung gemessen werden. In Übung 2DG-06 soll plötzlich in negativer Drehrichtung gemessen werden. Wenn es nur um das "Spiegelbild" geht, kann doch die Messung trotzdem in positiver Richtung erfolgen:

import java.awt.Graphics;
import java.applet.Applet;

public class BogenAufgabe extends Applet {
public void paint(Graphics g) {
g.drawArc(40, 60, 200, 40, 180, 270);
}
}

Die Graphik ist die gleiche. Was ist denn nun richtig (positive oder negative Drehrichtung oder beides)?

Schöne Grüße
     ]]></post>
    <post id="23" reply="22" author="Mentor1" time="Dienstag, 1. November 2007, 12:27"><![CDATA[  
Liebe , liebe Studierende,

beides ist richtig oder, besser gesagt, beides ist möglich. Hauptsache, Sie zeichnen, was Sie möchten. Sie wählen Startwinkel und positive oder negative Drehrichtung damit Sie Ihr Ziel erreichen.
Mit freundlichen Grüßen
    ]]></post>
 </thread>
      
          <thread title="LE 05, Graphics, 2D">
    <post id="24" author="Student1" time="Dienstag, 1. November 2007, 18:22" ><![CDATA[
Hallo,

ich habe einige Fragen zur 2D-API(LE05, Seite 13)
Im Modul wird das nur kurz angerissen und überhaupt nicht vernünftig erklärt.

1- Was bringt denn die 2D-API eigentlich im Vergleich zu Graphics (außer das man Float-Werte einsetzen kann)?
2- Warum muß man hier eine Main-Methode einsetzen und bei Graphics nicht?
3- Muß man denn Graphics und 2D gemeinsam verwenden? Ich finde es ein bißchen aufwändig, dass zuerst
---> im Konstruktor die Werte gesetzt wurden ((String titel, int breite, int hoehe))- dieser Schritt ist natürlich nachvollziehbar, wird ja dann
in der Main-Methode umgesetzt (new Rechteck2D("Rechteck2D", 200, 170);)
---> dann die paint-Methode aufgerufen wird. Warum wird denn eigentlich mit super auf die Oberklasse zugegriffen. Was bringt denn das?
---> Danach wird der graphische Kontext in den 2D Kontext gecastet.

Warum denn so umständlich? Geht das nicht gleich über 2D, ohne vorher den grafischen Kontext einzusetzen?

Grüsse
     ]]></post>
    <post id="25" reply="23" author="Mentor1" time="Mittwoch, 2. November 2007, 15:49"><![CDATA[   
Liebe , liebe Studierende,

Ziel der Seite 13 ist einfach zu zeigen, dass die Java Bibliothek in Graphics noch viel mehr zu bieten hat. Wir werden in diesem Kurs die Möglichkeiten von Graphics2D nicht vertiefen.
Die main Methode hat mit Graphics oder Graphics2D nichts zu tun, sondern mit der Tatsache, dass Rechteck2D eine Anwendung und kein Applet ist. Die Anwendung wird üblich mit Hilfe der main Methode ausgeführt.

In diesem Beispiel möchte man der Benutzerin der Klasse die Möglichkeit geben, flexibel Titel, Breite und Hoehe der Grafik zu wählen. Daher diese 3 Parameter im Konstruktor. Wenn ein Objekt mit new erzeugt wird, wie in der main Methode, kann man dann frei die Werte für diese Parameter wählen.
Dieses hier im Allgemeinen sich gut merken: es gibt 2 Hauptmöglichkeiten Software flexibel zu entwickeln. Die erste Möglichkeit ist durch die Benutzung von Parameter in Konstruktoren und Methoden. Die zweite Möglichkeit ist durch Interface und Vererbung.

Die paint Methode der Oberklasse hier java.awt.Window wird überschrieben. Jenach Betriebsystem kann der Aufruf der Methode der Oberklasse (super.paint(g); ) für ein besseres Bild sorgen.
Die cast Anweisung funktionniert, weil Graphics2D eine Unterklasse von Graphics ist. So wird die draw Methode der Klasse Graphics2D aufgerufen.

Mit freundlichen Grüßen
    ]]></post>
  </thread>
      
  <thread title="Erreichbarkeit">
    <post id="26" author="Mentor1" time="Dienstag, 1. November 2007, 12:56" ><![CDATA[
Liebe Studierende,

ich merke immer wieder Probleme mit der Wahl der Erreichbarkeit.
Wie soll man die Erreichbarkeit von Attributen im Allgemeinen wählen und warum? der Konstruktoren? der Methoden?
Ich freue mich um die Diskussion.
Mit freundlichen Grüßen
    ]]></post>
    <post id="27" reply="26" author="Student8" time="Dienstag, 1. November 2007, 17:38"><![CDATA[
Attribute private
Konstruktor public (ausser man will z.B. den Defaultkonstruktor verbieten)
Methoden public

Dadurch kann man Abhängigkeiten besser behandeln wenn eine Klasse eine andere nutzt und man nachträglich Änderungen am Verhalten durchführen will.
    ]]></post>
    <post id="28" reply="27" author="Mentor1" time="Mittwoch, 2. November 2007, 16:04"><![CDATA[
Sehr gute Antwort!
Attribute private für Sicherheit. Meistens möchte man die Änderung von Attribute durch Methoden (setters) kontrollieren.
Konstruktor public, damit man weltweit mit dieser Klasse Objekte erzeugen kann. Spezial Fall: in der Klasse Math ist der Konstruktor private deklariert, um zu verhindern Objekte mit dieser Klasse zu erzeugen. Die Klasse Math hat nur Klassen-Methoden. Math-Objekte zu erzeugen macht keinen Sinn.
Methoden public, damit man die erzeugte Objekte behandeln kann. Es kann private Methoden geben, als Hilfsmethoden von public Methoden oder Konstruktoren, um diese zu strukturieren, wenn sie zu gross werden.

Sich gut merken: die public Konstruktoren und Methoden bilden die "Schnittstelle" einer Klasse mit der Aussenwelt. Nur mit diesen kann man die Klasse "weltweit" benutzen. Ihre Javadoc Kommentare sind wichtig.

Wenn man eine andere Erreichbarkeit wählt wie paketweit oder in Unterklassen (protected), muss man gute Gründe haben.
Mit freundlichen Grüßen
    ]]></post>
  </thread>
      
  <thread title="Aufgabe 5, Präsens 1">
    <post id="29" author="Student1" time="Mittwoch, 16. November 2007, 18:31" ><![CDATA[
Lieber oder KomulitonnInnen mit Ahnung,

ich hatte nicht so genau verstanden, warum wir bei der equals-Methode "public boolean equals(Object ob) " verwenden und nicht public boolean equals(String s).
Ist der Grund, warum wir die Methode equals wie unten gepostet implementieren folgender:

Ich muß ja zunächst einmal klären, ob die Nummer, welche mir zum Vergleich gegeben wird, auch wirklich eine Kontonummer ist. Es könnte ja auch eine Telefonnummer oder Lottozahlen oder sonst was sein. Darum mache ich es wie unten angezeigt.
Ist das eine richtige Erkenntnis?

@Override
public boolean equals(Object ob) {

if (!(ob instanceof Konto))
return false;

Konto k = (Konto) ob;
boolean vergleich = (k.nummer.equals(ob));
if (vergleich == true)
System.out.println("Beide Konten sind identisch");
else
System.out.println("Konten sind nicht identisch");
return vergleich;
}


Grüsse
    ]]></post>
    <post id="30" reply="29" author="Student9" time="Mittwoch, 16. November 2007, 19:39"><![CDATA[
Hallo 

"ich hatte nicht so genau verstanden, warum wir bei der equals-Methode "public boolean equals(Object ob) " verwenden und nicht public boolean equals(String s)."

Wir möchten ja die Methode equals überschreiben, deswegen müssen wir die selbe Signatur verwenden. Die Methode equals wird von der Klasse Object geerbt (siehe z.B. http://dpunkt.de/java/Referenz/Das_Paket_java.lang/54.html), daher kommt der Parameter vom Typ Object.

Deine Lösung ist richtig, allerdings etwas umständlich. Ausserdem fehlen mit dir Blöcke. Ich glaube mit Blöcken wäre es klarer:

@Override
public boolean equals(Object ob) {

if (!(ob instanceof Konto)) {
return false;
}
Konto k = (Konto) ob;
boolean vergleich = k.nummer.equals(ob); //Die Klammern darum kannst Du dir sparen ;)
if (vergleich == true) {
System.out.println("Beide Konten sind identisch");
} else {
System.out.println("Konten sind nicht identisch");
}
return vergleich;
}

Du könntest das Ganze noch etwas vereinfachen, etwa so:

@Override
public boolean equals(Object ob) {

if (!(ob instanceof Konto)) {
return false;
}
Konto k = (Konto) ob;
boolean vergleich = k.nummer.equals(ob); //Die Klammern darum kannst Du dir sparen ;)
return vergleich;
}

Die Ausgabe auf der Konsole ist nicht falsch, da man sie sehr gut zur Kontrolle nutzen kann. Später ist das jedoch nicht notwendig oder kann ggf. durch ein Logging ersetzt werden.

Grüße

P.S.

Noch ein kleiner Tip, statt if(vergleich == true) geht auch if(vergleich), da vergleich vom Typ boolean ist und so direkt ausgewertet werden kann ;)
    ]]></post>
      </thread>
      
  <thread title="LE06">
    <post id="31" author="Student2" time="Montag, 14. November 2007, 19:43" ><![CDATA[
Hallo, wer hat Lust mit mir die ESA für LE06 anzugehen? Hab zwar den Stoff noch vor mir, aber bis Samstag/Sonntag sollte das erledigt sein.

Grüsse, 
    ]]></post>
    <post id="32" reply="31" author="Student10" time="Sonntag, 20. November 2007, 11:49"><![CDATA[
Hallo,

ich habe gerade die IDE NetBeans entdeckt.
Damit kann die GUI zeichnerisch, also anhand des Designs zusammengebaut werden und der Java-Code wird automatisch generiert.


http://netbeans.org/index_de.html

Grüße und einen schönen Sonntag
    ]]></post>
    <post id="33" reply="32" author="Student11" time="Montag, 21. November 2007, 20:56"><![CDATA[
Hallo,

ich hab mir die NetBeans IDE mal genauer angeschaut und probiert, tolle Sache das mit der GUI so, kann man schön probieren. Nun kann man dort ja direkt ein neues Projekt als "Java Desktop Application" erstellen, dann bekommt man schon ein Grundgerüst geliefert und kann sich dort dann in der Designer-Ansicht probieren.

Nun meine Frage: Wie kommt man denn in die Designer-Ansicht, ohne ein Projekt so zu erstellen bzw. das komplette Grundgerüst zu haben? Also ich habe nun z.B. schon ein bisschen was gebastelt und würde dann gerne mal über die Designer-Ansicht weitere sachen probieren. Irgendwie schaffe ich es aber nicht in diese Designer-Ansicht zu kommen (es geht nur, wenn ich ein neues Projekt als Java Desktop Application erstelle).

Weiß da jemand mehr?

mfg
    ]]></post>
    <post id="34" reply="33" author="Student10" time="Sonntag, 27. November 2007, 19:00"><![CDATA[
Hallo

kann das jemand ausführlich erklären?

Was bedeuten diese Zeilen und warum ?:

private Container c;
..........
c= getContentPane(); // <-----?????????

c.setLayout(new CardLayout());

c.add(panel1, SPANEL1);
c.add(panel2, SPANEL2);


Das ist das Beispiel aus den Kursmaterialien zum CardLayout
Also was bedeutet c=getContentPane(); ?
und warum muss der Container nicht mit add in das JFrame eingefuegt werden?
 
Ursprungsbeitrag | Bearbeiten | Thema teilen | Löschen | Antwort
Nutzerbild Student8
Re: LE06
von Student8 - Sonntag, 27. November 2007, 20:06
 
getContentPane gibt den Hintergrund JPane (Basisklasse wie alle Steuerelemente is Container) des aktuellen JFrames zurück. In diesem Fall der Standardmässige immer erstmal angelegte. Evtl nochmal die Klassenhierarchie anschauen und was z.B. der JFrame alles Standardmässig enthält.

Deswegen muss es auch nicht extra dem JFrame hinzugefügt werden weil es bereits enthalten ist.
    ]]></post>
    <post id="35" reply="34" author="Mentor1" time="Montag, 28. November 2007, 09:55"><![CDATA[
Liebe Studierende,

mit der ersten Version der Klasse JFrame, musste man immer die Methode getContentPane benutzen, um auf das Hintergrund-Panel eines JFrame-Objektes zuzugreifen. Nur so könnte man das Layout ändern oder andere graphische Objekte hinzufügen. In einer späteren Version der Klasse JFrame wurden die Methoden setLayout und add verändert, damit sie ohne die Methode getContentPane funktionieren, siehe die Dokumentation dieser Klasse in Java 6. Nicht alle Methoden wurden verändert. Zum Beispiel in Java 6 wurde die Methode getLayout immer noch nicht verändert. Da ist der Umweg mit getContentPane immer noch nötig. Daher manche programmieren immer noch systematisch mit der Benutzung von getContentPane, wie mehrere Beispiele der LE06 es machen.

Mit freundlichen Grüßen
    ]]></post>
      </thread>
      
            
  <thread title="JDialog">
    <post id="36" author="Student2" time="Samstag, 3. Dezember 2007, 12:34" ><![CDATA[
Eine Frage zu den Dialogen:

Im Modul steht

int antwort = JOptionPane.showConfirmDialog(myFrame, "Wollen Sie die Änderungen speichern?", "Speichern", JOptionPane.YES_NO_CANCEL_OPTION);

Ich leite aber von JFrame, habe also kein JFrame j = new JFrame();

Was gibt man bei o.g. Methode als ersten parameter an?

Danke und Grüsse, 
    ]]></post>
    <post id="37" reply="36" author="Student8" time="Samstag, 3. Dezember 2007, 14:08"><![CDATA[
Hallo,

z.b. this wenn du dich in einer abgeleiten klasse befindest.

in diesem fall geht für diese funktion auch einfach null.
    ]]></post>
  </thread>
      
  <thread title="Anonyme Klasse">
    <post id="38" author="Student1" time="Dienstag, 6. Dezember 2007, 13:28"><![CDATA[
Anonyme Klasse
von Student1 - Dienstag, 6. Dezember 2007, 13:28
 
Hallo,

kann mir jemand das Beispiel auf Seite 7, die Listener Implementierung durch anonyme Klasse erklären?
Irgendwie ist es nicht so ganz nachvollziehbar für mich.
Dieses "k" ist doch eine Instanz irgendeiner Klasse?(Komponentenklasse). Über den Punktoperator rufe ich doch eine Methode auf: k.addActionListener(new ActionListener)..
Wo ist denn hier eine anonyme Klasse?
LG
    ]]></post>
    <post id="39" reply="38" author="Student3" time="Dienstag, 6. Dezember 2007, 17:45"><![CDATA[
Hallo ,

Die Erklärung in unserem Skript ist wirklich etwas dürftig...
Ich musste auch erst einmal im Netz suchen.
Dabei fand ich diesen Link ganz hilfreich.
Dort wird es so erklärt:

Anonyme Klassen haben keinen Namen und erzeugen immer automatisch ein Objekt. Klassendefinition und Objekterzeugung sind zu einem Sprachkonstrukt verbunden. Die allgemeine Notation ist folgende:

new KlasseOderSchnittstelle() { /* Eigenschaften der inneren Klasse */ } 

In dem Block geschweifter Klammern lassen sich nun Methoden und Attribute definieren. Hinter new steht der Name einer Klasse oder Schnittstelle.

Auf Seite 10 in der LE07 gibt es dann noch mal ein Codebeispiel. Vergleiche mal mit der Notation oben.

b.addActionListener(new ActionListener()) {Klassenrumpf}; 

Diese Erklärung ist auch hilfreich:

Durch den Klassenrumpf wird eine unbenannte Klasse bestimmt, welche die direkt nach dem "new" angegebene Klasse erweitert, ohne dass es in diesem Fall nötig ist, das Schlüsselwort "extends" zu verwenden. Gleichzeitig wird ein Exemplar dieser Klasse erzeugt.Da die so deklarierte Klasse des erzeugten Objektes keinen Namen hat, wird sie auch als eine anonyme Klasse bezeichnet.


Ich hoffe, das hilft etwas!

Viele Grüße,
   ]]></post>
    <post id="40" reply="39" author="Student1" time="Mittwoch, 7. Dezember 2007, 13:27"><![CDATA[
Hallo ,

heißt das, das die anonyme Klasse ist?

new ActionListener())
Wenn ja, habe ich es jetzt verstanden.
 Ja über das Modul ärgere ich mich auch.
 manches wird total ausführlich erklärt, wo das gar nicht notwendig ist.
 Und dann bei solchen Dingen wird es gerade mal angerissen und dann soll man es verstehen...

 Danke und LG
   ]]></post>
    <post id="41" reply="40" author="Mentor1" time="Donnerstag, 8. Dezember 2007, 10:51"><![CDATA[

Liebe ,

eine Anonyme Klasse ist eine Klasse ohne Namen, wie es Seite 10 ausführlicher erklärt ist (die letzte Zeile der Seite 7 beachten). Ist das Beispiel Seite 10 zu verstehen? Nach new ActionListener() Zeile 33 kommt gleich der Rumpf der Klasse ohne Kopf, also ohne Namen für die Klasse. Hier füge ich genau den Rupf der Klasse ein:

 {
034 public void actionPerformed(ActionEvent knopfdruck) {
035 // Hintergrund des Fensters auf aktuelleFarbe setzen
036 getContentPane().setBackground(aktuelleFarbe);
037 }
038 }



Mit freundlichen Grüßen
   ]]></post>
    <post id="42" reply="41" author="Student1" time="Donnerstag, 8. Dezember 2007, 19:07"><![CDATA[
Sg,


die Anonymität der anonymen Klasse macht mir noch etwas zu schaffen :-)
habe ich es richtig verstanden,
Z.B: Das Quellcode "MausBewegung.java", Seite 20:

Ist "new MouseMotionListener()" die anonyme Klasse?

MfG


033 getContentPane().addMouseMotionListener(new MouseMotionListener() {
034
035 /**
036 * Maustaste gedrueckt - Methode wird aufgerufen wenn die Maustaste
037 * gedruckt wird
038 */
039 @Override
040 public void mouseDragged(MouseEvent mE) {
041 // Maus-Koordinaten zwischenspeichern
042 int x = mE.getX();
043 int y = mE.getY();
044 s = "Mouse-Position: ( " + x + " | " + y + " )";
045
046 // aktuelle Maus-Position im Label anzeigen
047 l.setText(s);
048 }
049
050 /** Mausbewegung - Methode wird aufgerufen wenn die Maus bewegt wird */
051 @Override
052 public void mouseMoved(MouseEvent mE) {
053 // Keine Funktionalitaet
054 }
055 });

   ]]></post>
    <post id="43" reply="42" author="Mentor1" time="Freitag, 9. Dezember 2007, 15:57"><![CDATA[
 
Liebe , liebe Studierende,

new MouseMotionListener() ist das Erzeugen eines Objekt vom Typ MouseMotionListener. Das Objekt ist hier auch anonym, ohne Namen. new ist wie immer die Anweisung, um ein Objekt zu erzeugen. Die anonyme Klasse kommt gleich danach (sie implementiert die 2 Methoden der Schnittstelle MouseMotionListener), hier
{
034
035 /**
036 * Maustaste gedrueckt - Methode wird aufgerufen wenn die Maustaste
037 * gedruckt wird
038 */
039 @Override
040 public void mouseDragged(MouseEvent mE) {
041 // Maus-Koordinaten zwischenspeichern
042 int x = mE.getX();
043 int y = mE.getY();
044 s = "Mouse-Position: ( " + x + " | " + y + " )";
045
046 // aktuelle Maus-Position im Label anzeigen
047 l.setText(s);
048 }
049
050 /** Mausbewegung - Methode wird aufgerufen wenn die Maus bewegt wird */
051 @Override
052 public void mouseMoved(MouseEvent mE) {
053 // Keine Funktionalitaet
054 }
055 }

Mit freundlichen Grüßen
    ]]></post>
  </thread>
      
  <thread title="xml">
    <post id="44" author="Student1" time="Dienstag, 27. Dezember 2007, 13:09" ><![CDATA[
Hallo,

ich kann bei mir in Eclipse nicht die Option finden, eine XML-Datei anzulegen.
Ich wähle File-new-other (siehe Screenshot)..
habe aber keine Option, eine XML-Datei anzulegen.
Gibt es da noch eine weitere Option, mache ich was falsch?


MfG
   ]]></post>
    <post id="45" reply="44" author="Student12" time="Donnerstag, 29. Dezember 2007, 14:24"><![CDATA[
Für XML benötigt Eclipse ein Plugin – soweit ich weiß.

Zum Beispiel dieses: http://editorxml.sourceforge.net/index.html
Es lässt sich leicht über die „Install New Software“-Option installieren. Auf der Seite findest du die Anleitung dazu.

„Rinzo“ wird auch in den Unterlagen der LE als Eclipse-Plugin empfohlen.

Grüße
   ]]></post>
    <post id="46" reply="45" author="Student12" time="Donnerstag, 29. Dezember 2007, 15:06"><![CDATA[
Nachtrag:

Es geht auch ohne Plugin: File -> New -> File
Und dann einfach eine XML-Datei erstellen. Ähnlich wie mit einem einfachen Texteditor.
Allerdings werden dann Fehler nicht angezeigt – dazu ist dann das Plugin nötig.
   ]]></post>
    <post id="47" reply="46" author="Student1" time="Freitag, 30. Dezember 2007, 19:42"><![CDATA[
Hallo,

super, danke.
LG und guten Rutsch
    ]]></post>
 </thread>
      
  <thread title="Seite 12, Ereignisbehandlung">
    <post id="48" author="Student1" time="Sonntag, 25. Dezember 2007, 13:50" ><![CDATA[
Sg
(oder an alle mit Ahnung),

auf Seite 12, LE07 wird die Ereignisauswertung als Flußdiagramm vorgestellt.
Da steht u.a. : " Wird der Button b1 gedrückt erzeugt das Programm ein Event-Objekt. Der "Browser" erkennt das Ereignis und....
Was ist denn hier eigentlich mit "Browser" gemeint?

MfG
   ]]></post>
    <post id="49" reply="48" author="Mentor1" time="Montag, 2. Januar 2008, 09:31"><![CDATA[
Liebe , liebe Studierende,

gute Frage! Die Animation wurde für Applets geschrieben, daher Browser. Betriebssystem ist für Anwendungen passender.
Mit freundlichen Grüßen
    ]]></post>
 </thread>
      
            
  <thread title="static">
    <post id="50" author="Mentor1" time="Dienstag, 20. Dezember 2007, 16:31" ><![CDATA[ 
Liebe Studierende,

ich merke immer wieder Probleme mit static.
Wann soll man ein Attribut mit static deklarieren? eine Methode?
Ich freue mich um die Diskussion.
Mit freundlichen Grüßen
   ]]></post>
    <post id="51" reply="50" author="Student1" time="Dienstag, 27. Dezember 2007, 13:22"><![CDATA[
Hallo,

eine Methode oder ein Attribut sollte man mit static deklarieren, wenn man darauf zugreifen möchte, ohne eine Instanz der Klasse zu erzeugen.
static-Methode wird auch Klassenmethode genannt. Sie existiert ohne von einem bestimmten Objekt abhängig zu sein.

Wann sollte man sie einsetzen?
Bei Objekten können sich ja während eines Programmablaufes Änderungen vornehmen. Wenn es eine Methode oder Variable sein soll, dessen Lebensdauer im gesamten Programmablauf in der Klasse nicht geändert werden soll, kann man static benutzen.
MfG
   ]]></post>
    <post id="52" reply="51" author="Mentor1" time="Montag, 2. Januar 2008, 10:01"><![CDATA[
Liebe , liebe Studierende,

gute Antwort. Danke. Hier eine Ergänzung.

"Bei Objekten können sich ja während eines Programmablaufes Änderungen vornehmen." Richtig, die Attribute eines Objektes können sich verändern.
Ein Klassen-Attribut, mit static deklariert, kann sich auch ändern. Es existiert aber nur 1 Mal im Speicher unabhängig von wie viele Objekt erzeugt werden.
Insbesondere wenn eine Methode auf kein Attribut zugreift und nur mit ihren Parametern arbeitet, sollte man sie mit static deklarieren, siehe Beispiele in den Klassen java.lang.Math oder java.util.Arrays.
Mit freundlichen Grüßen
    ]]></post>
  </thread>
      
  <thread title="EmptyStack">
    <post id="53" author="Student2" time="Montag, 2. Januar 2008, 21:32" ><![CDATA[
Hallo, beim durcharbeiten der LE10 taucht mir folgende Frage auf:

Angeboten wird der Code:

 if (empty()) { throw new EmptyStackException();  }
 else{
 // Löschen
 }

Wäre es nicht besser so:

try{
// Löschen eines Elementes
}catch(EmptyStackException e){
// Meldung
}

So spar ich mir die Methode, die Ausnahme kommt in jedem Fall, wenn der Stapel leer ist ... Was meint ihr?

Grüsse, 
   ]]></post>
    <post id="54" reply="53" author="Mentor1" time="Mittwoch, 4. Januar 2008, 10:44"><![CDATA[
Lieber ,

humm.... um die Ausnahme EmptyStackException fangen zu können, muss sie geworfen werden. Wo sollte das Werfen der Ausnahme passieren?
Viele Grüße
   ]]></post>
    <post id="55" reply="54" author="Student2" time="Mittwoch, 4. Januar 2008, 19:52"><![CDATA[
Hallo , wie wäre es so:

// Eigene Ausnahmeklasse
static class MyEx extends Exception {
public MyEx(String S) {
super(S);
}
} // eo eigene Klasse


// ... code
try{
if!(// Löschen eines Elementes, schlägt fehl){
throw MyEx("is wohl leer ... ");
}
}catch(MyEx e){
System.out.println("Meldung: " + e.getMessage());
}
// code...

Das müsste doch gehen, oder?

Viele Grüße, 
   ]]></post>
    <post id="56" reply="55" author="Mentor1" time="Donnerstag, 5. Januar 2008, 09:56"><![CDATA[
Lieber ,
ja sowas geht. In der Stack-Implementierung möchte man aber die Ausnahme nicht fangen. Der Benutzer / die Benutzerin der Klasse kann dies machen. Die Implementierung soll nur mit dem Werfen einer Ausnahme den Benutzer der Stack-Klasse warnen, dass das Stack leer ist.
Viele Grüße
    ]]></post>
  </thread>
      
  <thread title="Tutorial im Youtube">
    <post id="57" author="Student1" time="Montag, 9. Januar 2008, 15:00" ><![CDATA[
Hallo Leute,

Ich habe im Youtube einen guten Java-Tutorial Channel gefunden.
Für alle Interessierte der Link:
http://www.youtube.com/user/F4bisTutorials#p/c/1C04C2581BDA4E1D/0/bYrwnH23-SA

LG

    ]]></post>
 </thread>
 
   <thread title="Frage zu einem Codefragment LE 2">
    <post id="58" author="Student1" time="Samstag, 21. Januar 2008, 15:45"><![CDATA[
Hallo,

was bedeuted eigentlich dieser Codeabschnitt bzw verstehe ich das richtig?

String bildDateiOriginal = args.length > 0 ? args[0] : "AbbWurfparabel.jpg";

Wenn dem Programm Parameter übergeben wurden, dann lese zuerst "AbbWurfparabel.jpg" ein

int dateiGroesse = args.length > 1 ? Integer.parseInt(args[1]) : 14720;
Wenn das Array einen Index größer eins hat, also dem Programm überhaupt etwas übergeben wurde, dann soll die Dateigröße 14720 Bytes enthalten.
Wandel die Bytes in einen int-Wert um

String bildDateiGeand = args.length > 2 ? args[2] : "AbbWurfparabel_new.jpg";
Gibt es einen 2. Index im Array, dann soll dem die Datei "AbbWurfparabel_new.jpg" zugewiesen werden.



MfG
   ]]></post>
    <post id="59" reply="58" author="Student5" time="Sonntag, 22. Januar 2008, 10:16"><![CDATA[
Hallo,

die Schreibweise

String bildDateiOriginal = args.length > 0 ? args[0] : "AbbWurfparabel.jpg";

ist eine abgekürzte Form einer if-Verzweigung.
Als "normale if-Verzweigung würde das ganze so aussehen:"

String bildDateiOriginal;
if(args.length > 0) {
bildDateiOriginal = args[0];
}
else {
bildDateiOriginal = "AbbWurfparabel.jpg"
}

Gruß,
    ]]></post>
  </thread>
  
    <thread title="Frage zu LE 3, StringComparatorTest.java">
    <post id="60" author="Student1" time="Samstag, 21. Januar 2008, 21:13"><![CDATA[
Hallo,
ich habe eine Frage zu der Methode sort (von der Klasse Comparators) Seite 10, LE 03, StringComparatorTest.java:
Irgendwie verstehe ich die Ausgabe der ArrayList nicht.
In der API steht zu der Methode sort:

sort(List<T> list, Comparator<? super T> c)
Sorts the specified list according to the order induced by the specified comparator.

Unter StringComparator steht ja nur, dass das eine Object mit dem anderen verglichen
wird. Nur das wie verstehe ich nicht. Ich meine nach welchem Sortiertalgorithmus kann denn die
Ausgabe "Das Satz ein ist" zustande kommen? Alphabetisch sortiert ist es nicht, Nach der Länge der
Wörter auch nicht, wonach denn?

MfG
  ]]></post>
    <post id="61" reply="60" author="Mentor1" time="Sonntag, 22. Januar 2008, 16:23"><![CDATA[
Liebe , liebe Studierende,

Die Klasse StringComparator Seite 10 benutzt die Methode compareTo der Klasse String:
int compareTo(String anotherString)
Compares two strings lexicographically.
Also werden die Elemente alphabetisch sortiert, Großbuchstaben kommen vor Kleinbuchstaben.
Mit freundlichen Grüßen
    ]]></post>
  </thread>
  
      <thread title="Allgemeine Frage zur Programmierung">
    <post id="62" author="Student1" time="Samstag, 21. Januar 2008, 15:48"><![CDATA[
Hallo,

Eine Datei haben wir bis jetzt über das Programm erstellt, d.h. es wurde in der Applikation selber angelegt.
Wann lernen wir denn das normale Zugreifen oder speichern auf Dateien, wie es heutzutage üblich ist, also das es der User
selber auswählen kann, der Datei einen Namen vergeben kann usw.? Das war ja nicht Teil von Prog2, in welchem Modul bekommen wir solche Sachen denn beigebracht?
Außerdem haben wir auch noch gar keine Applikationen erstellt, also Desktop Programme. Ich meine den Code haben wir ja immer über Eclipse ausgeführt. In welchem Modul lernen
wir es denn Applikationen zu erstellen?


MfG
  ]]></post>
    <post id="63" reply="62" author="Mentor1" time="Dienstag, 24. Januar 2008, 21:02"><![CDATA[
iebe , liebe Studierende,

meinen Sie, das der User über eine graphische Oberfläche den Namen einer Datei wählt? Dafür haben wir die Hilfe der java Bibliothek mit JFileChooser in der Le08 gesehen. Dies haben Sie auch benutzt in der ESA der LE07 um die Cocktails in eine Datei zu speichern.
Eine einfache Art Desktop Programme zu erstellen ist mit Hilfe von jar Dateien. Sie wurden in Programmieren I nur kurz vorgestellt, nicht genug um sie gut für eine Desktop Anwendung zu benutzen. In der LE04 in Programmieren I gibt es einen Link zu einem Java-Tutorial, wo dies gut erklärt ist:
http://docs.oracle.com/javase/tutorial/deployment/jar/index.html
Mehr wird im Modul Software Entwicklung kommen.
Mit freundlichen Grüßen
    ]]></post>
  </thread>
  
        <thread title="WS2010, Aufgabe 4">
    <post id="64" author="Student1" time="Mittwoch, 25. Januar 2008, 16:11"><![CDATA[
Hallo,

eine Frage zu WS2010, Aufgabe 4:
zur Anweisung s.substring(0,l) aus der Musterlösung
(return s.charAt(l) + spiegel(s.substring (0,l)); .
0 ist ja normalerweise der erste Buchstabe eines Wortes (eines String).
Aber hier faßt das Programm 0 als den letzten Buchstaben auf, wie es sein soll.
Mir ist nicht ganz klar, wie das erreicht wurde?

MfG
  ]]></post>
    <post id="65" reply="64" author="Student9" time="Mittwoch, 25. Januar 2008, 21:12"><![CDATA[
Hallo ,

schau Dir einfach das return Statement nochmal genau an.

Der letzte Buchstabe von s wird mit s.charAt(l) geliefert.
Dieser Buchstabe wird mit dem Ergebnis des erneuten Aufrufs von spiegel() verknüpft.
Es wird allerdings nicht wieder s an spiegel() übergeben, sondern ein Teil des Wortes, nämlich s.substring(0, l). Was das bedeutet lässt sich leicht im JavaDoc von substring nachlesen:

Returns a new string that is a substring of this string. The substring begins at the specified beginIndex and extends to the character at index endIndex - 1. Thus the length of the substring is endIndex-beginIndex.

Es wird also s ohne den letzten Buchstaben übergeben.
Dadurch das sich die Methode spiegel() immer wieder selbst aufruft erreichst Du die geforderte Rekursion und es entsteht nach und nach eine Zeichenkette die das ursprünglich übergebene Wort umdreht..

Ich hoffe ich konnte mich verständlich ausdrücken, falls noch Fragen offen sind... Einfach fragen :)

Grüße und viel Erfolg bei der Klausur
    ]]></post>
  </thread>
  
 <thread title="Fragen zu LE 02">
    <post id="66" author="Student1" time="Samstag, 21. Januar 2008, 15:47"><![CDATA[
Hallo,

1-)Wenn ich für die Serialisierung eine eindeutige Kennung festlegen möchte (für das Deserialisieren von Objekten), lege ich das selber fest oder macht das Eclipse?

2-) Seite 11: "Aus Gründen der Sicherheit werden zur Serialisierung nur Objekte von Klassen zugelassen, die das Interface Serializable implementieren. "
Was ist denn mit Sicherheit gemeint?

3-) Eingangs in der LE2 wurde ein komplettes Bsp vom Einlesen eines Textes aus der Tastatur bishin zum Speichern in einer Datei und wiederum Auslesen dieser
Datei vorgestellt.
Dabei wurde das Speichern in eine Datei folgendermaßen dargestellt:

a- Anlegen einer Datei:
String pfad = "NeueDatei.txt";
datei = new File (pfad);
datei.createNewFile();

b- Schreiben der Daten in die Datei:
bw= new BufferedWriter(new FileWriter(datei);
bw.write(text);
bw.flush();
bw.close();


Auf Seite 13 wird das Schreiben in eine Datei folgendermaßen erläutert:

040 public static void testeCharacterAusgabeStrom(String dateiName,
041 String[] textA) throws IOException {
042 // Eine Datei und drei Ausgabestroeme erzeugen und miteinander
043 // verbinden
044 FileOutputStream foStream = new FileOutputStream(dateiName);
045 OutputStreamWriter osWriter = new OutputStreamWriter(foStream);
046 BufferedWriter bWriter = new BufferedWriter(osWriter);


Ist das also eine alternative Möglichkeit um Daten in eine Datei zu speichern?



4-) Seite 18, DateiKopieren.java:
020 public static void main(String[] args) throws IOException {
021 // Uebergabeparameter pruefen
022 if (args.length != 2) {
023 System.out.println("\nAufruf des Programms:\n"
024 + "java DateiKopieren datei_1 datei_2");
025 System.out.println("\ndatei_1: Datei aus der gelesen wird.");
026 System.out.println("datei_2: Datei in die geschrieben wird.");
027 System.exit(1);
028 }

Warum ist die Zeile 22, also "if (args.length != 2)" überhaupt nötig?


MfG
  ]]></post>
    <post id="67" reply="66" author="Mentor1" time="Sonntag, 22. Januar 2008, 16:12"><![CDATA[
Liebe , liebe Studierende,

1) Ich nehme an, sie meinen "private static final long serialVersionUID = 123456789L;"
Diese Nummer ist kein Muss aber sinnvoll. Wenn eine Klasse sich ändert, vor allem sie hat weniger Attribute, ist es sinnvoll zu wissen, mit welcher Version der Klasse, Objekte gespeichert wurden. Sie können die Nummer selbst festlegen, oder eclipse machen lassen.
2) Sicherheit ist hier allgemein gemeint.Wenn man verhindern möchte, dass Objekte einer bestimmten Klasse serialisiert oder als Objekte gespeichert werden, dann soll diese bestimmte Klasse die Schnittstelle java.io.Serializable NICHT implementieren.
3) Ja, es gibt mehrere Wege mit Hilfe der java.io Bibliothek Texte in eine Datei zu speichern.
4) die Namen der Dateien sollen als Parameter beim Programmaufruf übergeben werden, etwa so: java DateiKopieren file1 file2. file1 und file2 werden im Array args, Parameter der main Methode, gespeichert. Dieses Array hat denn die Länge 2, wenn die Parameter für die Namen der Dateien übergeben worden sind.
Mit freundlichen Grüßen
  ]]></post>
    <post id="68" reply="67" author="Student1" time="Sonntag, 22. Januar 2008, 17:00"><![CDATA[
Hallo,

zu Punkt 4 noch:
Wäre es nicht besser, das so zu formulieren:
if (args.length == 2)
anstatt
if (args.length != 2) ?

Mir ist dieser Punkt nicht so klar.

MfG

  ]]></post>
    <post id="69" reply="68" author="Mentor1" time="Dienstag, 24. Januar 2008, 20:48"><![CDATA[
Hallo ,

args.length != 2 ist richtig.
Es werden 2 Namen erwartet. Wenn die 2 Namen nicht da sind, also args.length != 2, wird eine Fehlermeldung ausgegeben.
Ist es klarer?
Mit freundlichen Grüßen
  ]]></post>
    <post id="70" reply="69" author="Student1" time="Donnerstag, 26. Januar 2008, 11:04"><![CDATA[
Hallo,

ja klar.
Im Code steht ja schließlich:


022 if (args.length != 2) { 023 System.out.println("\nAufruf des Programms:\n" 024 + "java DateiKopieren datei_1 datei_2"); 025 System.out.println("\ndatei_1: Datei aus der gelesen wird."); 026 System.out.println("datei_2: Datei in die geschrieben wird."); 027 System.exit(1); 028 }




Also System.exit(1), beendet das Programm, wenn Parameter ungleich 2.
Na sicher, so macht es auch Sinn.
Alles klar.
Vielen Dank.

MfG
    ]]></post>
  </thread>
  
  <thread title="Methode traversieren">
    <post id="71" author="Student1" time="Donnerstag, 26. Januar 2008, 10:49"><![CDATA[
Hallo  oder jemand mit Ahnung,

ich bin die Präsensaufgabe von XML nochmal durchgegangen.
Ich habe das nicht mehr so parat.

Könnte mir freundlicherweise jemand noch einmal die Funktionsweise dieser Methode erklären?

import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
* Klasse zum Ausgeben eines XML-Dokuments auf der Konsole unter der Benutzung
* des DOM Parsers.
*
* @author Prof. Dr. Andreas Solymosi, Sandra Kaltofen
*/
public class DOMAusgabe {
// Pfad und Name der XML Datei die ausgegeben werden soll
private static String XMLDateiName = "adressen2.xml";

/**
* Main Methode.
*
* @param args Uebergabeparameter
*/
public static void main(String[] args) throws Exception {
DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
// Uebergebene XML-Datei parsen
Document dokument = builder.parse(new File(XMLDateiName));
// DOM Baum durchlaufen und ausgeben
traversieren(dokument.getDocumentElement(), "");
}

/**
* Methode zum Durchlaufen und Ausgeben des DOM Baums.
*
* @param e aktuelles Element
* @param ebene String für die Einrueckung der Ebenen
*/
private static void traversieren(Element e, String ebene) {
String attr = "";
if (e.hasAttributes()){
NamedNodeMap attributes = e.getAttributes();

int attributesLength = attributes.getLength();
for (int j = 0;j<attributesLength;j++){
Node attribute = attributes.item(j);
attr = " typ: " + attribute.getNodeValue();
}
}
System.out.println(ebene + e.getNodeName() + attr);
// Kindelemente des uebergebenen Elements ermitteln
NodeList children = e.getChildNodes();
for (int i = 0; i < children.getLength(); i++) {
Node knoten = children.item(i);
// Knoten ist ein ELEMENT_NODE
if (knoten.getNodeType() == Node.ELEMENT_NODE)
// Rekursiver Aufruf von traversieren für aktuelles Element
traversieren((Element) knoten, ebene + " ");
// Knoten ist ein TEXT_NODE
else if (knoten.getNodeType() == Node.TEXT_NODE) {
String inhalt = knoten.getTextContent();
if (inhalt.trim().length() > 0) // leerer Inhalt?
System.out.println(ebene + " :" + inhalt);
} else
// kein ELEMENT_NODE, kein TEXT_NODE
System.out.println(ebene + knoten);
}
}
}

MfG
  ]]></post>
    <post id="72" reply="71" author="Mentor1" time="Freitag, 27. Januar 2008, 08:59"><![CDATA[
 
Liebe , liebe Studierende,

diese Aufgabe sollte zusammen mit der Seite 23 der LE 08 gelesen werden. In der main Methode finden sich die Standard-Anweisungen, um eine XML-Datei einzulesen und dabei alle Elemente in ein Document-Objekt zu speichern. Die Methode traversieren besucht rekursiv alle Knoten des Document-Objektes. Wie diese Methode programmiert ist, ist auch klassisch, wenn man alle Knoten eines Baumes besuchen möchte, siehe 2. Frage der Übung 4 der 2. Präsenz. Der Unterschied zwischen Präsenz und Seite 24 der LE ist, die if Anweisung, um zu prüfen, ob ein Element Attribute hat, und diese mit Hilfe einer Schleife auszugeben, wenn die Bedingung erfüllt ist.
Ist es klarer?
Mit freundlichen Grüßen


PS: bei XML den Unterschied zwischen Elemente und Attribute (Seiten 6, 11, 14) gut verstehen. Das DOM Document Objekt Model (Baum der Elemente, Seite 16) auch gut verstehen. 
    ]]></post>
  </thread>
  
  
  <thread title="Spickzettel">
    <post id="73" author="Student1" time="Mittwoch, 25. Januar 2008, 16:26"><![CDATA[
Sg ,

Sie hatten uns Studenten während des letzten Präsensunterrichtes ja gesagt, dass Sie bei Bedarf auch mehr als 3 A4 Seiten Spickzettel zulassen könnten.
Gilt das immer noch?
Könnten wir in der Klausur mehr als 3 A 4 Seiten Spickzettel benutzen?

MfG
  ]]></post>
    <post id="74" reply="73" author="Student2" time="Mittwoch, 25. Januar 2008, 20:55"><![CDATA[ 
Also so wie ich das verstanden habe sind es 3 Blätter vorn und hinten beschrieben == 6 Seiten. Ich hoffe mich nicht getäuscht zu haben (Zettel schon fast fertig);

grüsse, 
  ]]></post>
    <post id="75" reply="74" author="Mentor1" time="Donnerstag, 26. Januar 2008, 08:40"><![CDATA[ 
Liebe Studierende,

ja es sind 3 Blätter, also 6 Seiten, die Sie beliebig (per Hande, gedruckt) schreiben können. Frau Akkar, wie viele Seiten bräuchten Sie?
Mit freundlichen Grüßen
  ]]></post>
    <post id="76" reply="75" author="Student1" time="Samstag, 28. Januar 2008, 15:45"><![CDATA[ 
Hallo,

4 A 4 Blätter?

MfG
  ]]></post>
    <post id="77" reply="76" author="Mentor1" time="Montag, 30. Januar 2008, 09:33"><![CDATA[ 
Liebe , liebe Studierende,

falls das 4. Blatt für ein besseres Gefühl bringt, ist es OK.
Mit freundlichen Grüßen
    ]]></post>
  </thread>
</forum>