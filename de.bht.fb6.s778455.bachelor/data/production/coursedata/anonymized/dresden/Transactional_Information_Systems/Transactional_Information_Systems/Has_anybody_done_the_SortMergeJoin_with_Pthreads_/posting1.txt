ID: 965
CREATION_DATETIME: 1355439600000
MODIFICATION_DATETIME: 1358982000000
TITLE: null
PARENT_POSTING_ID: 0
POSTING_TYPE: question
CONTENT:
It seems that there is something wrong with my code during argument passing.
```ruby
struct ThreadArgs {
	ThreadArgs(Tuple t, Relation &relation2, Relation &output_relation) : relation2(relation2), output_relation(output_relation) {
		tuple = t;
	}
public:
	Tuple tuple;
	Relation &relation2;
	Relation &output_relation;
};
// Thread for joining.
void* thread_Join(void *args)
{
	ThreadArgs *ta = (ThreadArgs*)args;	
	Tuple t = (*ta). tuple;
	Relation &r2 = (*ta). relation2;
	Relation &output_relation = (*ta). output_relation;
	unsigned i = 0;
	while(i < (r2). length())
	{
		cout << t. id << ' ' << r2[i]. id << ' ' << r2[i]. value << endl;
		i++;
	}
}
```
when I try this:
```ruby
ThreadArgs *args = new ThreadArgs(t, relation2, output_relation);
pthread_create(&tid[i], NULL, &thread_Join, (void*)args);
```
The result goes:
0	3544048	3544048
0	0	0
0	0	0
0	0	0
0	0	0
0	1	3
0	5	15
0	5	15
0	6	18
0	6	18
0	7	21
0	7	21
0	7	21
0	7	21
0	7	21
0	8	24
0	8	24
0	8	24
0	9	27
0	9	27
......
(always random numbers in the first tuple)
but it couldn't be  the void* thread_Join(void *args) problem because when I use this:
```ruby
thread_Join((void*)args);
```
everything goes right
TAGGED_CONTENT:
